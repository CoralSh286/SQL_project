-- 5. Get a list of treatments and how many patients have received each
SELECT t.t_id, t.name, COUNT(tb.p_id) AS patient_count
FROM treatment t
LEFT JOIN treated_by tb ON t.t_id = tb.t_id
GROUP BY t.t_id, t.name
ORDER BY patient_count DESC;



SELECT d.d_id, d.d_first_name, d.d_last_name, d.specialization, 
       COUNT(tb.t_id) AS num_treatments
FROM doctor d
JOIN performs p ON d.d_id = p.d_id
JOIN treated_by tb ON p.t_id = tb.t_id
JOIN patient_report pr ON tb.p_id = pr.p_id
WHERE pr.report_date >= NOW() - INTERVAL '2 years'
GROUP BY d.d_id
ORDER BY num_treatments DESC
LIMIT 5;


SELECT d.d_id, d.d_first_name, d.d_last_name, d.specialization, 
       COUNT(p.t_id) AS num_treatments
FROM doctor d
JOIN performs p ON d.d_id = p.d_id
GROUP BY d.d_id
HAVING COUNT(p.t_id) > (
    SELECT AVG(num_treatments) 
    FROM (SELECT d_id, COUNT(t_id) AS num_treatments FROM performs GROUP BY d_id) AS avg_treatments
)
ORDER BY num_treatments DESC;


SELECT p.p_id, p.p_first_name, p.p_last_name, 
       EXTRACT(DAY FROM p.date_of_birth) AS birth_day,
       EXTRACT(MONTH FROM p.date_of_birth) AS birth_month,
       EXTRACT(YEAR FROM p.date_of_birth) AS birth_year,
       COUNT(t.t_id) AS num_treatments
FROM patient p
JOIN treated_by tb ON p.p_id = tb.p_id
JOIN treatment t ON tb.t_id = t.t_id
WHERE EXTRACT(YEAR FROM p.date_of_birth) >= 2020
GROUP BY p.p_id, p.p_first_name, p.p_last_name, p.date_of_birth
ORDER BY num_treatments DESC
LIMIT 5;


SELECT EXTRACT(YEAR FROM report_date) AS report_year, 
       COUNT(*) AS num_reports
FROM patient_report
WHERE report_date >= NOW() - INTERVAL '10 years'
GROUP BY report_year
ORDER BY report_year DESC;


SELECT t.name AS treatment_name, 
       ROUND(AVG(EXTRACT(YEAR FROM AGE(p.date_of_birth))), 1) AS avg_patient_age
FROM treatment t
JOIN treated_by tb ON t.t_id = tb.t_id
JOIN patient p ON tb.p_id = p.p_id
GROUP BY t.name
ORDER BY avg_patient_age DESC;


SELECT report_year, report_month, num_reports AS max_reports
FROM (
    SELECT EXTRACT(YEAR FROM report_date) AS report_year, 
           EXTRACT(MONTH FROM report_date) AS report_month, 
           COUNT(*) AS num_reports,
           RANK() OVER (PARTITION BY EXTRACT(YEAR FROM report_date) ORDER BY COUNT(*) DESC) AS rnk
    FROM patient_report
    WHERE report_date >= NOW() - INTERVAL '10 years'
    GROUP BY report_year, report_month
) ranked_reports
WHERE rnk = 1;


SELECT 
    b.num_room, 
    COUNT(b.b_id) AS available_beds,
    STRING_AGG(CONCAT(p.p_first_name, ' ', p.p_last_name), ', ') AS assigned_patients
FROM bed b
LEFT JOIN patient p ON b.b_id = p.b_id
WHERE b.is_available = TRUE
GROUP BY b.num_room
ORDER BY available_beds DESC;


SELECT 
    d.d_id, 
    d.d_first_name, 
    d.d_last_name, 
    COUNT(pf.t_id) AS treatments_performed
FROM doctor d
JOIN performs pf ON d.d_id = pf.d_id
GROUP BY d.d_id
ORDER BY treatments_performed DESC
LIMIT 5;


WITH ranked_nurses AS (
    SELECT n.shift_schedule, 
           n.n_id AS nurse_id, 
           CONCAT(n.n_first_name, ' ', n.n_last_name) AS nurse_name, 
           COUNT(tb.t_id) AS treatment_count, 
           n.phone_number,
           ROW_NUMBER() OVER (PARTITION BY n.shift_schedule ORDER BY COUNT(tb.t_id) DESC) AS rn
    FROM nurse n
    JOIN examination e ON n.n_id = e.n_id
    JOIN treated_by tb ON e.p_id = tb.p_id
    GROUP BY n.shift_schedule, n.n_id, n.n_first_name, n.n_last_name, n.phone_number
)
SELECT shift_schedule, nurse_id, nurse_name, treatment_count, phone_number
FROM ranked_nurses
WHERE rn = 1
ORDER BY shift_schedule;

